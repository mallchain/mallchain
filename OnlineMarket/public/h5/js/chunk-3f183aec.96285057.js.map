{"version":3,"sources":["webpack:///./src/views/user/BindingPhone.vue?a61d","webpack:///src/views/user/BindingPhone.vue","webpack:///./src/views/user/BindingPhone.vue?580c","webpack:///./src/views/user/BindingPhone.vue","webpack:///./src/utils/validate.js","webpack:///./src/mixins/SendVerifyCode.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","domProps","on","$event","target","composing","phone","captcha","class","disabled","code","_v","_s","text","confirm","staticRenderFns","components","props","data","mixins","computed","mounted","methods","component","bindMessage","fn","message","field","replace","required","opt","type","url","email","alpha","pattern","alpha_dash","alpha_num","num","chs","chs_alpha","chs_alpha_num","chs_dash","chs_phone","baseAttr","min","max","length","range","Object","keys","reduce","key","attr","_attr","sendCode","n","run","setInterval","clearInterval"],"mappings":"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","file":"h5/js/chunk-3f183aec.96285057.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ChangePassword\"},[_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phone),expression:\"phone\"}],attrs:{\"type\":\"number\",\"placeholder\":\"填写手机号码\"},domProps:{\"value\":(_vm.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phone=$event.target.value}}})]),_c('div',{staticClass:\"item acea-row row-between-wrapper\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.captcha),expression:\"captcha\"}],staticClass:\"codeIput\",attrs:{\"type\":\"text\",\"placeholder\":\"填写验证码\"},domProps:{\"value\":(_vm.captcha)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.captcha=$event.target.value}}}),_c('button',{staticClass:\"code font-color-red\",class:_vm.disabled === true ? 'on' : '',attrs:{\"disabled\":_vm.disabled},on:{\"click\":_vm.code}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \")])])]),_c('div',{staticClass:\"confirmBnt bg-color-red\",on:{\"click\":_vm.confirm}},[_vm._v(\"确认绑定\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"ChangePassword\">\r\n    <div class=\"list\">\r\n      <div class=\"item\">\r\n        <input type=\"number\" placeholder=\"填写手机号码\" v-model=\"phone\" />\r\n      </div>\r\n      <div class=\"item acea-row row-between-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"填写验证码\"\r\n          class=\"codeIput\"\r\n          v-model=\"captcha\"\r\n        />\r\n        <button\r\n          class=\"code font-color-red\"\r\n          :disabled=\"disabled\"\r\n          :class=\"disabled === true ? 'on' : ''\"\r\n          @click=\"code\"\r\n        >\r\n          {{ text }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"confirmBnt bg-color-red\" @click=\"confirm\">确认绑定</div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport sendVerifyCode from \"@mixins/SendVerifyCode\";\r\nimport { required, alpha_num, chs_phone } from \"@utils/validate\";\r\nimport { validatorDefaultCatch } from \"@utils/dialog\";\r\nimport { registerVerify, bindingPhone } from \"@api/user\";\r\n\r\nexport default {\r\n  name: \"BindingPhone\",\r\n  components: {},\r\n  props: {},\r\n  data: function() {\r\n    return {\r\n      captcha: \"\",\r\n      phone: \"\" //手机号\r\n    };\r\n  },\r\n  mixins: [sendVerifyCode],\r\n  computed: mapGetters([\"userInfo\"]),\r\n  mounted: function() {},\r\n  methods: {\r\n    async confirm() {\r\n      let that = this;\r\n      const { phone, captcha } = that;\r\n      try {\r\n        await that\r\n          .$validator({\r\n            phone: [\r\n              chs_phone(chs_phone.message(\"手机号码\")),\r\n              alpha_num(alpha_num.message())\r\n            ],\r\n            captcha: [\r\n              required(required.message(\"验证码\")),\r\n              alpha_num(alpha_num.message(\"验证码\"))\r\n            ]\r\n          })\r\n          .validate({ phone, captcha });\r\n      } catch (e) {\r\n        return validatorDefaultCatch(e);\r\n      }\r\n      bindingPhone({\r\n        phone: this.phone,\r\n        captcha: this.captcha\r\n      })\r\n        .then(res => {\r\n          if (res.data !== undefined && res.data.is_bind) {\r\n            that.$dialog.confirm({\r\n              mes: res.msg,\r\n              opts: [\r\n                {\r\n                  txt: \"确认绑定\",\r\n                  color: false,\r\n                  callback: () => {\r\n                    bindingPhone({\r\n                      phone: this.phone,\r\n                      captcha: this.captcha,\r\n                      step: 1\r\n                    })\r\n                      .then(res => {\r\n                        that.$dialog.success(res.msg).then(() => {\r\n                          that.$router.replace({ name: \"PersonalData\" });\r\n                        });\r\n                      })\r\n                      .catch(res => {\r\n                        that.$dialog.error(res.msg).then(() => {\r\n                          that.$router.replace({ name: \"PersonalData\" });\r\n                        });\r\n                      });\r\n                  }\r\n                },\r\n                {\r\n                  txt: \"取消\",\r\n                  color: false,\r\n                  callback: () => {\r\n                    that.$dialog.error(\"已取消绑定\").then(() => {\r\n                      that.$router.replace({ name: \"PersonalData\" });\r\n                    });\r\n                  }\r\n                }\r\n              ]\r\n            });\r\n          } else {\r\n            that.$dialog.success(res.msg).then(() => {\r\n              that.$router.replace({ name: \"PersonalData\" });\r\n            });\r\n          }\r\n        })\r\n        .catch(res => {\r\n          that.$dialog.error(res.msg);\r\n        });\r\n    },\r\n    async code() {\r\n      let that = this;\r\n      const { phone } = that;\r\n      try {\r\n        await that\r\n          .$validator({\r\n            phone: [\r\n              required(required.message(\"手机号码\")),\r\n              chs_phone(chs_phone.message())\r\n            ]\r\n          })\r\n          .validate({ phone });\r\n      } catch (e) {\r\n        return validatorDefaultCatch(e);\r\n      }\r\n\r\n      registerVerify({ phone: phone })\r\n        .then(res => {\r\n          that.$dialog.success(res.msg);\r\n          that.sendCode();\r\n        })\r\n        .catch(res => {\r\n          that.$dialog.error(res.msg);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BindingPhone.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BindingPhone.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BindingPhone.vue?vue&type=template&id=2799fe93&\"\nimport script from \"./BindingPhone.vue?vue&type=script&lang=js&\"\nexport * from \"./BindingPhone.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const bindMessage = (fn, message) => {\r\n  fn.message = field => message.replace(\"%s\", field || \"\");\r\n};\r\n\r\nexport function required(message, opt = {}) {\r\n  return {\r\n    required: true,\r\n    message,\r\n    type: \"string\",\r\n    ...opt\r\n  };\r\n}\r\n\r\nbindMessage(required, \"请输入%s\");\r\n\r\nexport function url(message, opt = {}) {\r\n  return {\r\n    type: \"url\",\r\n    message,\r\n    ...opt\r\n  };\r\n}\r\n\r\nbindMessage(url, \"请输入正确的链接\");\r\n\r\nexport function email(message, opt = {}) {\r\n  return {\r\n    type: \"email\",\r\n    message,\r\n    ...opt\r\n  };\r\n}\r\n\r\nbindMessage(email, \"请输入正确的邮箱地址\");\r\n\r\n/**\r\n * 验证字段必须完全由字母构成。\r\n *\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function alpha(message) {\r\n  return attrs.pattern(/^[\\w]+$/, message);\r\n}\r\n\r\nbindMessage(alpha, \"%s必须是字母\");\r\n\r\n/**\r\n * 只能包含由字母、数字，以及 - 和 _\r\n *\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function alpha_dash(message) {\r\n  return attrs.pattern(/^[\\w\\d_-]+$/, message);\r\n}\r\n\r\nbindMessage(alpha_dash, \"%s只能包含由字母、数字，以及 - 和 _\");\r\n\r\n/**\r\n * 必须是完全是字母、数字\r\n *\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function alpha_num(message) {\r\n  return attrs.pattern(/^[\\w\\d]+$/, message);\r\n}\r\n\r\nbindMessage(alpha_num, \"%s只能包含字母、数字\");\r\n/**\r\n * 正确的金额\r\n *\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function num(message) {\r\n  return attrs.pattern(\r\n    /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/,\r\n    message\r\n  );\r\n}\r\n\r\nbindMessage(num, \"%s格式不正确\");\r\n\r\n/**\r\n * 只能是汉字\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function chs(message) {\r\n  return attrs.pattern(/^[\\u4e00-\\u9fa5]+$/, message);\r\n}\r\n\r\nbindMessage(chs, \"%s只能是汉字\");\r\n\r\n/**\r\n * 只能包含汉字、字母\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function chs_alpha(message) {\r\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w]+$/, message);\r\n}\r\n\r\nbindMessage(chs_alpha, \"%s只能包含汉字、字母\");\r\n\r\n/**\r\n * 只能包含汉字、字母和数字\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function chs_alpha_num(message) {\r\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w\\d]+$/, message);\r\n}\r\n\r\nbindMessage(chs_alpha_num, \"%s只能包含汉字、字母和数字\");\r\n\r\n/**\r\n * 只能包含由汉字、字母、数字，以及 - 和 _\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function chs_dash(message) {\r\n  return attrs.pattern(/^[\\u4e00-\\u9fa5\\w\\d-_]+$/, message);\r\n}\r\n\r\nbindMessage(chs_dash, \"%s只能包含由汉字、字母、数字，以及 - 和 _\");\r\n\r\n/**\r\n * 手机号验证\r\n * @param message\r\n * @returns {*}\r\n */\r\nexport function chs_phone(message) {\r\n  return attrs.pattern(/^1(3|4|5|7|8|9|6)\\d{9}$/i, message);\r\n}\r\nbindMessage(chs_phone, \"请输入正确的手机号码\");\r\n\r\nconst baseAttr = {\r\n  min: \"%s最小长度为:min\",\r\n  max: \"%s最大长度为:max\",\r\n  length: \"%s长度必须为:length\",\r\n  range: \"%s长度为:range\",\r\n  pattern: \"$s格式错误\"\r\n};\r\n\r\nconst attrs = Object.keys(baseAttr).reduce((attrs, key) => {\r\n  attrs[key] = (attr, message = \"\", opt = {}) => {\r\n    const _attr =\r\n      key === \"range\" ? { min: attr[0], max: attr[1] } : { [key]: attr };\r\n\r\n    return {\r\n      message: message.replace(\r\n        `:${key}`,\r\n        key === \"range\" ? `${attr[0]}-${attr[1]}` : attr\r\n      ),\r\n      type: \"string\",\r\n      ..._attr,\r\n      ...opt\r\n    };\r\n  };\r\n  bindMessage(attrs[key], baseAttr[key]);\r\n  return attrs;\r\n}, {});\r\n\r\nexport default attrs;\r\n","export default {\r\n  data() {\r\n    return {\r\n      disabled: false,\r\n      text: \"获取验证码\"\r\n    };\r\n  },\r\n  methods: {\r\n    sendCode() {\r\n      if (this.disabled) return;\r\n      this.disabled = true;\r\n      let n = 60;\r\n      this.text = \"剩余 \" + n + \"s\";\r\n      const run = setInterval(() => {\r\n        n = n - 1;\r\n        if (n < 0) {\r\n          clearInterval(run);\r\n        }\r\n        this.text = \"剩余 \" + n + \"s\";\r\n        if (this.text < \"剩余 \" + 0 + \"s\") {\r\n          this.disabled = false;\r\n          this.text = \"重新获取\";\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}